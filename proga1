#include <stdio.h>
#include <iostream> 
#include <cmath>
using namespace std; 
void main(){

	int a, b, ll;
	int n=3;
	double f, *m, *x, st[10][10],*st1, *kfp,znam;
	m=(double*)calloc(n,sizeof(double));
	x=(double*)calloc(n,sizeof(double));
	st1=(double*)calloc(n,sizeof(double));
	kfp=(double*)calloc(n,sizeof(double));
	a=0;
	b=9;

	f = (int)(b - a);
	f = f / (int)(n); 

		for (int j = 0; j < n+1; j++)
		{

			x[j] = a + j*f;

			m[j] =3 * sin((3 * x[j]) / 4) + 0.1;

			printf_s("x%d = %f, y%d = %f\n", j,x[j],j, m[j]);

		}

		printf("\n\n\n");

		for (int oo = 0; oo < 10; oo++)
		{

			kfp[oo] = 0; st1[oo] = 0;

			for (int nn = 0; nn < 10; nn++)
			{

				st[oo][nn] = 0;
				st[oo][1] = 1;
			}

		}
		for (int k = 0; k < n; k++)
		{

			ll = 1;
			znam = 1;

			for (int i = 0; i < n+1; i++)
			{
				if (i != k)
				{
					if (ll == 1)
					{ 
						st[k][0] = -x[i];
				
					}

					else
					{
						st[k][ll] = 1;
						for (int y = ll - 1; y != 0; y--)
							st[k][y]=kfp[y-1]-x[i]*kfp[y];
						st[k][0] = kfp[0] * (-x[i]);
					}

			for (int r = 0; r < n; r++)
				kfp[r] = st[k][r];

			ll++;

				znam *=(x[k] - x[i]);

			}

		}

		for (int r = 0; r < n + 1; r++)
		{

		st[k][r] *= -(m[k] / znam);
		st1[r] +=  st[k][r];
		}

	}

	printf("Polinom Lagranja: %fx^%d ", st1[n], n);
	for (int t = n - 1; t >= 1; t--)
	{
		if (st1[t] > 0)
			printf("+ %fx^%d ", st1[t], t);
		else
			printf("- %fx^%d ", -st1[t], t);
	}
	if (st1[0] > 0)
		printf("+ %f", st1[0]);
	else
		printf("- %f", -st1[0]);

	system("pause");

}
